https://leetcode.com/problems/subarray-sums-divisible-by-k/description/

class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        vector<int> freq(k,0);
        freq[0]=1;
        int sum=0,count=0;
        for(int i=0;i<nums.size();i++){
            sum+=nums[i];
            int rem=sum%k;
            if(rem<0) rem+=k;
            count+=freq[rem];
            freq[rem]++;
        }
        return count;
    }
};
----------------------------------------------------------------------------------------------------------------------------------------
//Brute dorce - time limit exceed

class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        int res=0;
        for(int i=0;i<nums.size();i++){
            int sum=nums[i];
            if(sum%k==0) res++;
            for(int j=i+1;j<nums.size();j++){
                sum+=nums[j];
                if(sum%k==0) res++;
            }
        }
        return res;
    }
};
