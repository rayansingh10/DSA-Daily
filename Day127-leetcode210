https://leetcode.com/problems/course-schedule-ii/

class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,vector<int>> adj;
        for(auto i : prerequisites){
            adj[i[1]].push_back(i[0]);
        }
        vector<int> ans;
        vector<int> deg(numCourses,0);
        for(auto it: adj){
            for(auto j : it.second) deg[j]++;
        }
        queue<int> q;
        for(int i=0;i<numCourses;i++)
            if(deg[i]==0)
                q.push(i);
        while(!q.empty()){
            int front=q.front();
            q.pop();
            ans.push_back(front);
            for(auto i:adj[front]){
                deg[i]--;
                if(deg[i]==0) q.push(i);
            }
        }
        if(ans.size()!=numCourses ) return {};
        return ans ;
    }
};
