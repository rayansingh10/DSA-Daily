https://leetcode.com/problems/longest-ideal-subsequence/description/


//isme prev 1 to 26 nhi ja raha randomly kuch bhi ho skta hai like 25,then 3 then 2 so hum yaha pe bottum up loop
//reverse nhi karenge normally 0-26 chalayenge
//agar tumne prev wale ke liye vector<int>(n+1,0) karoge to memory limitation dega---O(n^2) 

// isliye hume vector<int> (27,0) use karna taki constant space mile 0(n) only 
class Solution {
public:
    int memo(string &s,int &k,int i,int prev,vector<vector<int>> dp){
        if(i==s.size()) return 0;
        if(dp[i][prev]!=-1) return dp[i][prev];
        int include=0,exclude=0;
        int curr=s[i]-'a'+1;
        if(prev==0 || abs(curr-prev)<=k) include=1+memo(s,k,i+1,curr,dp);
        exclude=memo(s,k,i+1,prev,dp);
        return dp[i][prev]=max(include,exclude);
    }
    int bu(string &s,int &k){
        vector<vector<int>> dp(s.size()+1,vector<int>(s.size()+1,0));
        //yaha galti karega (prev wale loop me)
        for(int curr=s.size()-1;curr>=0;curr--){
            for(int prev=curr-1;prev>=-1;prev--){
                int include=0;
                if(prev==-1 || abs(s[curr]-s[prev])<=k)
                include=1+dp[curr+1][curr+1];
                int exclude=dp[curr+1][prev+1];
                dp[curr][prev+1]=max(include,exclude);
            }
        }
        return dp[0][0];
    }
    int longestIdealString(string s, int k) {
        /* vector<vector<int>> dp(s.length()+1,vector<int>(27,-1));
        return memo(s,k,0,0,dp); */
        return bu(s,k);
    } 
};
