https://leetcode.com/problems/sum-of-distances-in-tree/description/


class Solution {
public:
    unordered_map<int,vector<int>> adj;
    vector<int> count,ans;
    int rootsum=0;
    void dfs(int n,int curr,int parent,int depth){
        rootsum+= depth;
        for(auto i:adj[curr]){
            if(i==parent) continue;
            dfs(n,i,curr,depth+1);
            count[curr]+=count[i];
        }
        count[curr]+=1;
    }
    void dfs2(int &n,int i,int parent){
        for(auto k:adj[i]){
            if(k==parent) continue;
            ans[k]=ans[i]-count[k]+(n-count[k]);
            dfs2(n,k,i);        
        }
    }
    vector<int> sumOfDistancesInTree(int n, vector<vector<int>>& edges) {
        count.resize(n,0);
        ans.resize(n,0);
        for(int i=0;i<edges.size();i++){
            int u=edges[i][0];
            int v=edges[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        dfs(n,0,-1,0);
        ans[0]=rootsum;
        dfs2(n,0,-1);
        return ans;
    }
};
