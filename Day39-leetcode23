https://leetcode.com/problems/merge-k-sorted-lists/description/


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    class compare{
        //yaha galti karunga public na define karke 
        public:
        bool operator()(ListNode* a,ListNode* b){
            return a->val > b->val;
        }
    };
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*,vector<ListNode*>,compare> q;
        for(int i=0;i<lists.size();i++){
            if(lists[i]) q.push(lists[i]);
        }
        ListNode* head=NULL;
        ListNode* tail=NULL;
        while(!q.empty()){
            //yaha bhi glti karunga pop na karke ya t->next na check karke
            ListNode* t=q.top(); q.pop();
            if(!head){
                head=t;
                tail=t;
            }
            else{
                tail->next=t;
                tail=t;
            }
            if(t->next) q.push(t->next);
        }
        return head;
    }
};
