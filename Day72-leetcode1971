https://leetcode.com/problems/find-if-path-exists-in-graph/description/

///normal bfs

class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int src, int dest) {
        if(src==dest) return true;
        vector<vector<int>> adj(n,vector<int>());
        for(int i=0;i<edges.size();i++){
            int u=edges[i][0];
            int v=edges[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        vector<int> visited(n,0);
        queue<int> q;
        q.push(src);
        visited[src]=1;
        while(!q.empty()){
            int front=q.front();q.pop();
            for(int nei : adj[front]){
                if(nei==dest) return true;
                if(!visited[nei]){
                    q.push(nei);
                    visited[nei]=1;
                }
            }
        }
        return false;
    }
};
