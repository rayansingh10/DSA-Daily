https://leetcode.com/problems/word-ladder/

class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        unordered_set<string> st(wordList.begin(),wordList.end());
        queue<pair<int,string>> q;
        q.push({1,beginWord});
        while(!q.empty()){
            auto front=q.front();
            q.pop();
            string original=front.second;
            int len=front.first;
            if(original==endWord) return len;
            for(int i=0;i<original.size();i++){
                char t=original[i];
                for(char c='a';c<='z';c++){
                    original[i]=c;
                    if(st.find(original)!=st.end()){
                        q.push({len+1,original});
                        st.erase(original);
                    }
                }
                original[i]=t;
            }
        }
        return 0;

    }
};
