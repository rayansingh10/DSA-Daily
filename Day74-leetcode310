https://leetcode.com/problems/minimum-height-trees/description/



class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {
        if(n==1) return {0};
        vector<vector<int>> adj(n,vector<int>());
        vector<int> degree(n,0);
        for(int i=0;i<edges.size();i++){
            int u=edges[i][0];
            int v=edges[i][1];
            degree[u]++;
            degree[v]++;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        vector<int> ans;
        queue<int> q;
        for(int i=0;i<n;i++){
            if(degree[i]==1) q.push(i);
        }
        while(n>2){
            int size=q.size();
            n-=size;
            while(size-->0){
                int front=q.front();
                q.pop();
                for(auto neig : adj[front]){
                    degree[neig]--;
                    if(degree[neig]==1) q.push(neig);
                }
            }
        }
        while(!q.empty()) {ans.push_back(q.front()); q.pop();}
        return ans;
        
    }
};
